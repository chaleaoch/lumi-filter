name: Tests and Coverage

on:
  push:
    branches: [main, develop, feature_*]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests weekly on Sunday at 6 AM UTC
    - cron: "0 6 * * 0"

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run linting (optional)
        run: |
          # Add linting commands if needed
          echo "Linting step - add tools like ruff, black, etc. if desired"
        continue-on-error: true

      - name: Run tests with coverage
        run: |
          uv run pytest \
            --cov=lumi_filter \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing \
            --cov-fail-under=80

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.python-version }}
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload coverage HTML report
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html-report-${{ matrix.python-version }}
          path: htmlcov/
          retention-days: 30

      - name: Upload coverage XML for badge
        if: matrix.python-version == '3.12'
        uses: actions/upload-artifact@v3
        with:
          name: coverage-xml
          path: coverage.xml
          retention-days: 7

  coverage-badge:
    name: Update Coverage Badge
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: coverage-xml

      - name: Extract coverage percentage
        id: coverage
        run: |
          COVERAGE=$(python -c "
          import xml.etree.ElementTree as ET
          tree = ET.parse('coverage.xml')
          root = tree.getroot()
          coverage = root.attrib['line-rate']
          percentage = round(float(coverage) * 100, 1)
          print(f'{percentage}')
          ")
          echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"

      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: lumi-filter-coverage.json
          label: Coverage
          message: ${{ steps.coverage.outputs.percentage }}%
          valColorRange: ${{ steps.coverage.outputs.percentage }}
          maxColorRange: 100
          minColorRange: 0
